/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Bzz, BzzInterface } from "../Bzz";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capped",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newMinter",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620026103803806200261083398181016040528101906200003791906200031b565b6040518060400160405280600381526020017f425a5a00000000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f425a5a00000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb9291906200022b565b508060049080519060200190620000d49291906200022b565b505050620000f7620000eb6200015d60201b60201c565b6200016560201b60201c565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060078190555050620003b2565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805462000239906200037c565b90600052602060002090601f0160209004810192826200025d5760008555620002a9565b82601f106200027857805160ff1916838001178555620002a9565b82800160010185558215620002a9579182015b82811115620002a85782518255916020019190600101906200028b565b5b509050620002b89190620002bc565b5090565b5b80821115620002d7576000816000905550600101620002bd565b5090565b600080fd5b6000819050919050565b620002f581620002e0565b81146200030157600080fd5b50565b6000815190506200031581620002ea565b92915050565b600060208284031215620003345762000333620002db565b5b6000620003448482850162000304565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200039557607f821691505b60208210811415620003ac57620003ab6200034d565b5b50919050565b61224e80620003c26000396000f3fe6080604052600436106101395760003560e01c806379cc6790116100ab578063a457c2d71161006f578063a457c2d714610421578063a9059cbb1461045e578063aa271e1a1461049b578063dd62ed3e146104d8578063ea72156914610515578063f2fde38b1461052c57610140565b806379cc6790146103625780638da5cb5b1461038b57806395d89b41146103b6578063983b2d56146103e1578063986502751461040a57610140565b8063355274ea116100fd578063355274ea14610240578063395093511461026b57806340c10f19146102a857806342966c68146102e557806370a082311461030e578063715018a61461034b57610140565b806306fdde0314610145578063095ea7b31461017057806318160ddd146101ad57806323b872dd146101d8578063313ce5671461021557610140565b3661014057005b600080fd5b34801561015157600080fd5b5061015a610555565b6040516101679190611717565b60405180910390f35b34801561017c57600080fd5b50610197600480360381019061019291906117d2565b6105e7565b6040516101a4919061182d565b60405180910390f35b3480156101b957600080fd5b506101c261060a565b6040516101cf9190611857565b60405180910390f35b3480156101e457600080fd5b506101ff60048036038101906101fa9190611872565b610614565b60405161020c919061182d565b60405180910390f35b34801561022157600080fd5b5061022a610643565b60405161023791906118e1565b60405180910390f35b34801561024c57600080fd5b5061025561064c565b6040516102629190611857565b60405180910390f35b34801561027757600080fd5b50610292600480360381019061028d91906117d2565b61065c565b60405161029f919061182d565b60405180910390f35b3480156102b457600080fd5b506102cf60048036038101906102ca91906117d2565b610693565b6040516102dc919061182d565b60405180910390f35b3480156102f157600080fd5b5061030c600480360381019061030791906118fc565b61078c565b005b34801561031a57600080fd5b5061033560048036038101906103309190611929565b610799565b6040516103429190611857565b60405180910390f35b34801561035757600080fd5b506103606107e1565b005b34801561036e57600080fd5b50610389600480360381019061038491906117d2565b610869565b005b34801561039757600080fd5b506103a0610877565b6040516103ad9190611965565b60405180910390f35b3480156103c257600080fd5b506103cb6108a1565b6040516103d89190611717565b60405180910390f35b3480156103ed57600080fd5b5061040860048036038101906104039190611929565b610933565b005b34801561041657600080fd5b5061041f610a0a565b005b34801561042d57600080fd5b50610448600480360381019061044391906117d2565b610a5b565b604051610455919061182d565b60405180910390f35b34801561046a57600080fd5b50610485600480360381019061048091906117d2565b610ad2565b604051610492919061182d565b60405180910390f35b3480156104a757600080fd5b506104c260048036038101906104bd9190611929565b610af5565b6040516104cf919061182d565b60405180910390f35b3480156104e457600080fd5b506104ff60048036038101906104fa9190611980565b610b4b565b60405161050c9190611857565b60405180910390f35b34801561052157600080fd5b5061052a610bd2565b005b34801561053857600080fd5b50610553600480360381019061054e9190611929565b610c9f565b005b606060038054610564906119ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610590906119ef565b80156105dd5780601f106105b2576101008083540402835291602001916105dd565b820191906000526020600020905b8154815290600101906020018083116105c057829003601f168201915b5050505050905090565b6000806105f2610d97565b90506105ff818585610d9f565b600191505092915050565b6000600254905090565b60008061061f610d97565b905061062c858285610f6a565b610637858585610ff6565b60019150509392505050565b60006010905090565b600061065730610799565b905090565b600080610667610d97565b90506106888185856106798589610b4b565b6106839190611a50565b610d9f565b600191505092915050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071890611af2565b60405180910390fd5b6007548261072d61060a565b6107379190611a50565b1115610778576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076f90611b5e565b60405180910390fd5b6107828383611277565b6001905092915050565b61079633826113d7565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107e9610d97565b73ffffffffffffffffffffffffffffffffffffffff16610807610877565b73ffffffffffffffffffffffffffffffffffffffff161461085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611bca565b60405180910390fd5b61086760006115ae565b565b61087382826113d7565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108b0906119ef565b80601f01602080910402602001604051908101604052809291908181526020018280546108dc906119ef565b80156109295780601f106108fe57610100808354040283529160200191610929565b820191906000526020600020905b81548152906001019060200180831161090c57829003601f168201915b5050505050905090565b61093b610d97565b73ffffffffffffffffffffffffffffffffffffffff16610959610877565b73ffffffffffffffffffffffffffffffffffffffff16146109af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a690611bca565b60405180910390fd5b6001600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055565b600080610a66610d97565b90506000610a748286610b4b565b905083811015610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090611c5c565b60405180910390fd5b610ac68286868403610d9f565b60019250505092915050565b600080610add610d97565b9050610aea818585610ff6565b600191505092915050565b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610bda610d97565b73ffffffffffffffffffffffffffffffffffffffff16610bf8610877565b73ffffffffffffffffffffffffffffffffffffffff1614610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4590611bca565b60405180910390fd5b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81549060ff0219169055565b610ca7610d97565b73ffffffffffffffffffffffffffffffffffffffff16610cc5610877565b73ffffffffffffffffffffffffffffffffffffffff1614610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290611bca565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8290611cee565b60405180910390fd5b610d94816115ae565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0690611d80565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7690611e12565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f5d9190611857565b60405180910390a3505050565b6000610f768484610b4b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ff05781811015610fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd990611e7e565b60405180910390fd5b610fef8484848403610d9f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611066576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105d90611f10565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110cd90611fa2565b60405180910390fd5b6110e1838383611674565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115e90612034565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111fa9190611a50565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161125e9190611857565b60405180910390a3611271848484611679565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156112e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112de906120a0565b60405180910390fd5b6112f360008383611674565b80600260008282546113059190611a50565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461135a9190611a50565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113bf9190611857565b60405180910390a36113d360008383611679565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143e90612132565b60405180910390fd5b61145382600083611674565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d0906121c4565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816002600082825461153091906121e4565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115959190611857565b60405180910390a36115a983600084611679565b505050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116b857808201518184015260208101905061169d565b838111156116c7576000848401525b50505050565b6000601f19601f8301169050919050565b60006116e98261167e565b6116f38185611689565b935061170381856020860161169a565b61170c816116cd565b840191505092915050565b6000602082019050818103600083015261173181846116de565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117698261173e565b9050919050565b6117798161175e565b811461178457600080fd5b50565b60008135905061179681611770565b92915050565b6000819050919050565b6117af8161179c565b81146117ba57600080fd5b50565b6000813590506117cc816117a6565b92915050565b600080604083850312156117e9576117e8611739565b5b60006117f785828601611787565b9250506020611808858286016117bd565b9150509250929050565b60008115159050919050565b61182781611812565b82525050565b6000602082019050611842600083018461181e565b92915050565b6118518161179c565b82525050565b600060208201905061186c6000830184611848565b92915050565b60008060006060848603121561188b5761188a611739565b5b600061189986828701611787565b93505060206118aa86828701611787565b92505060406118bb868287016117bd565b9150509250925092565b600060ff82169050919050565b6118db816118c5565b82525050565b60006020820190506118f660008301846118d2565b92915050565b60006020828403121561191257611911611739565b5b6000611920848285016117bd565b91505092915050565b60006020828403121561193f5761193e611739565b5b600061194d84828501611787565b91505092915050565b61195f8161175e565b82525050565b600060208201905061197a6000830184611956565b92915050565b6000806040838503121561199757611996611739565b5b60006119a585828601611787565b92505060206119b685828601611787565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a0757607f821691505b60208210811415611a1b57611a1a6119c0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a5b8261179c565b9150611a668361179c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611a9b57611a9a611a21565b5b828201905092915050565b7f425a5a3a20686173206e6f74206d696e7420617574686f72697a6174696f6e21600082015250565b6000611adc602083611689565b9150611ae782611aa6565b602082019050919050565b60006020820190508181036000830152611b0b81611acf565b9050919050565b7f45524332304361707065643a2063617020657863656564656400000000000000600082015250565b6000611b48601983611689565b9150611b5382611b12565b602082019050919050565b60006020820190508181036000830152611b7781611b3b565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611bb4602083611689565b9150611bbf82611b7e565b602082019050919050565b60006020820190508181036000830152611be381611ba7565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611c46602583611689565b9150611c5182611bea565b604082019050919050565b60006020820190508181036000830152611c7581611c39565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611cd8602683611689565b9150611ce382611c7c565b604082019050919050565b60006020820190508181036000830152611d0781611ccb565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d6a602483611689565b9150611d7582611d0e565b604082019050919050565b60006020820190508181036000830152611d9981611d5d565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611dfc602283611689565b9150611e0782611da0565b604082019050919050565b60006020820190508181036000830152611e2b81611def565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611e68601d83611689565b9150611e7382611e32565b602082019050919050565b60006020820190508181036000830152611e9781611e5b565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611efa602583611689565b9150611f0582611e9e565b604082019050919050565b60006020820190508181036000830152611f2981611eed565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611f8c602383611689565b9150611f9782611f30565b604082019050919050565b60006020820190508181036000830152611fbb81611f7f565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b600061201e602683611689565b915061202982611fc2565b604082019050919050565b6000602082019050818103600083015261204d81612011565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600061208a601f83611689565b915061209582612054565b602082019050919050565b600060208201905081810360008301526120b98161207d565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061211c602183611689565b9150612127826120c0565b604082019050919050565b6000602082019050818103600083015261214b8161210f565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b60006121ae602283611689565b91506121b982612152565b604082019050919050565b600060208201905081810360008301526121dd816121a1565b9050919050565b60006121ef8261179c565b91506121fa8361179c565b92508282101561220d5761220c611a21565b5b82820390509291505056fea2646970667358221220e7cfd28932a35485803c8943134ca592440bf10625e38d74fa54096dc0deae7a64736f6c63430008090033";

type BzzConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BzzConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bzz__factory extends ContractFactory {
  constructor(...args: BzzConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Bzz";
  }

  deploy(
    capped: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Bzz> {
    return super.deploy(capped, overrides || {}) as Promise<Bzz>;
  }
  getDeployTransaction(
    capped: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(capped, overrides || {});
  }
  attach(address: string): Bzz {
    return super.attach(address) as Bzz;
  }
  connect(signer: Signer): Bzz__factory {
    return super.connect(signer) as Bzz__factory;
  }
  static readonly contractName: "Bzz";
  public readonly contractName: "Bzz";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BzzInterface {
    return new utils.Interface(_abi) as BzzInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bzz {
    return new Contract(address, _abi, signerOrProvider) as Bzz;
  }
}
